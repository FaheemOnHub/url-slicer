<h1>Dashboard</h1>
<p>Welcome, <%= user.email %>!</p>

<div class="dashboard-tabs">
  <button id="shortener-tab" class="tab-button active">URL Shortener</button>
  <button id="urls-tab" class="tab-button">Shortened URLs</button>
</div>

<div id="shortener-content" class="tab-content">
  <div class="panel">
    <h2>Shorten a URL</h2>
    <form id="shorten-form">
      <div class="form-group">
        <label for="original-url">Original URL:</label>
        <input type="url" id="original-url" name="originalUrl" required>
      </div>
      <div class="form-group">
        <label for="custom-alias">Custom Alias (optional, 3-50 symbols):</label>
        <input type="text" id="custom-alias" name="customAlias" minlength="3" maxlength="50" pattern="[a-zA-Z0-9-_]+">
      </div>
      <div class="form-group">
        <label for="max-uses">Max Uses:</label>
        <input type="number" id="max-uses" name="maxUses" min="1" required>
      </div>
      <div class="form-group">
        <label for="auto-delete-at">Auto Delete At:</label>
        <input type="datetime-local" id="auto-delete-at" name="autoDeleteAt">
      </div>
      <div class="form-group">
        <label for="whitelist-mode">
          <input type="checkbox" id="whitelist-mode" name="whitelistMode">
          Whitelist Mode
        </label>
      </div>
      <div class="form-group">
        <label for="allowed-countries">Allowed Countries (comma-separated):</label>
        <input type="text" id="allowed-countries" name="allowedCountries">
      </div>
      <div class="form-group">
        <label for="blocked-countries">Blocked Countries (comma-separated):</label>
        <input type="text" id="blocked-countries" name="blockedCountries">
      </div>
      <button type="submit" class="btn btn-primary">Shorten URL</button>
    </form>
  </div>
</div>

<div id="urls-content" class="tab-content" style="display: none;">
  <div class="panel">
    <h2>Your Shortened URLs</h2>
    <ul class="url-list">
      <% urls.forEach(function(url) { %>
        <li class="url-item">
          <h3><%= url.original_url %></h3>
          <p>Short URL: <a href="/<%= url.custom_alias || url.short_code %>" target="_blank"><%= url.custom_alias || url.short_code %></a></p>
          <p>Created: <%= new Date(url.created_at).toLocaleString() %></p>
          <p>Max Uses: <%= url.max_uses || 'Unlimited' %></p>
          <p>Auto Delete At: <%= url.auto_delete_at ? new Date(url.auto_delete_at).toLocaleString() : 'Never' %></p>
          <p>Whitelist Mode: <%= url.whitelist_mode ? 'On' : 'Off' %></p>
          <p>Allowed Countries: <%= url.allowed_countries || 'All' %></p>
          <p>Blocked Countries: <%= url.blocked_countries || 'None' %></p>
          <div class="url-actions">
            <button class="btn btn-secondary view-stats" data-short-code="<%= url.custom_alias || url.short_code %>">View Stats</button>
            <button class="btn btn-secondary edit-url" data-short-code="<%= url.custom_alias || url.short_code %>">Edit</button>
            <button class="btn btn-secondary open-modal" data-modal="delete" data-short-code="<%= url.custom_alias || url.short_code %>">Delete</button>
            <button class="btn btn-secondary" id="copy-button" data-short-code="<%= url.custom_alias || url.short_code %>">Copy</button>
          </div>
        </li>
      <% }); %>
    </ul>
  </div>
</div>

<!-- Universal Modal -->
<div id="universal-modal" class="modal">
  <div class="modal-content panel">
    <span class="close-modal">&times;</span>
    <h2 id="modal-title"></h2>
    <div id="modal-body"></div>
    <div id="modal-actions"></div>
  </div>
</div>

<!-- Stats Modal (Exception) -->
<div id="stats-modal" class="modal">
  <div class="modal-content panel">
    <span class="close-modal">&times;</span>
    <h2>URL Statistics</h2>
    <div id="stats-content"></div>
  </div>
</div>

<!-- Edit Modal (Exception) -->
<div id="edit-modal" class="modal">
  <div class="modal-content panel">
    <span class="close-modal">&times;</span>
    <h2>Edit URL</h2>
    <form id="edit-form">
      <input type="hidden" id="edit-short-code" name="shortCode">
      <div class="form-group">
        <label for="edit-max-uses">Max Uses:</label>
        <input type="number" id="edit-max-uses" name="maxUses" min="1">
      </div>
      <div class="form-group">
        <label for="edit-auto-delete-at">Auto Delete At:</label>
        <input type="datetime-local" id="edit-auto-delete-at" name="autoDeleteAt">
      </div>
      <div class="form-group">
        <label for="edit-whitelist-mode">
          <input type="checkbox" id="edit-whitelist-mode" name="whitelistMode">
          Whitelist Mode
        </label>
      </div>
      <div class="form-group">
        <label for="edit-allowed-countries">Allowed Countries (comma-separated):</label>
        <input type="text" id="edit-allowed-countries" name="allowedCountries">
      </div>
      <div class="form-group">
        <label for="edit-blocked-countries">Blocked Countries (comma-separated):</label>
        <input type="text" id="edit-blocked-countries" name="blockedCountries">
      </div>
      <button type="submit" class="btn btn-primary">Update URL</button>
    </form>
  </div>
</div>

<script>
$(document).ready(function() {
  // Tab functionality
  $('.tab-button').click(function() {
    $('.tab-content').hide();
    $('.tab-button').removeClass('active');
    $(this).addClass('active');
    $('#' + $(this).attr('id').replace('-tab', '-content')).show();
  });

  $('#shortener-tab').click();

  // Form submission
  $('#shorten-form').submit(function(e) {
    e.preventDefault();
    $.ajax({
      url: '/shorten',
      method: 'POST',
      data: $(this).serialize(),
      success: function(response) {
        var shortUrl = response.customAlias || response.shortCode;
        showModal('URL Shortened', 'URL shortened successfully! Short URL: ' + shortUrl, [
          {text: 'OK', class: 'btn-primary', click: function() { location.reload(); }}
        ]);
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  });

  // View stats
  $('.view-stats').click(function() {
    var shortCode = $(this).data('short-code');
    $.ajax({
      url: '/stats/' + shortCode,
      method: 'GET',
      success: function(response) {
        var statsHtml = '<p>Original URL: ' + response.url.original_url + '</p>';
        statsHtml += '<p>Total Clicks: ' + response.clicks.length + '</p>';
        
        var countryStats = {};
        response.clicks.forEach(function(click) {
          countryStats[click.country] = (countryStats[click.country] || 0) + 1;
        });

        statsHtml += '<h3>Clicks by Country:</h3>';
        statsHtml += '<ul>';
        for (var country in countryStats) {
          statsHtml += '<li>' + country + ': ' + countryStats[country] + '</li>';
        }
        statsHtml += '</ul>';

        $('#stats-content').html(statsHtml);
        $('#stats-modal').show();
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  });

  // Edit URL
  $('.edit-url').click(function() {
    var shortCode = $(this).data('short-code');
    $.ajax({
      url: '/url/' + shortCode,
      method: 'GET',
      success: function(response) {
        $('#edit-short-code').val(shortCode);
        $('#edit-max-uses').val(response.max_uses);
        $('#edit-auto-delete-at').val(response.auto_delete_at);
        $('#edit-whitelist-mode').prop('checked', response.whitelist_mode);
        $('#edit-allowed-countries').val(response.allowed_countries);
        $('#edit-blocked-countries').val(response.blocked_countries);
        $('#edit-modal').show();
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  });

  $('#edit-form').submit(function(e) {
    e.preventDefault();
    var shortCode = $('#edit-short-code').val();
    $.ajax({
      url: '/url/' + shortCode,
      method: 'PUT',
      data: $(this).serialize(),
      success: function() {
        showModal('Success', 'URL updated successfully!', [
          {text: 'OK', class: 'btn-primary', click: function() { location.reload(); }}
        ]);
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  });

  // Universal modal opener
  $('.open-modal').click(function() {
    var modalType = $(this).data('modal');
    var shortCode = $(this).data('short-code');
    
    if (modalType === 'delete') {
      showModal('Confirm Deletion', 'Are you sure you want to delete this URL?<br>Short URL: <span class="highlight">' + shortCode + '</span>', [
        {text: 'Delete', class: 'btn-primary', click: function() { deleteUrl(shortCode); }},
        {text: 'Cancel', class: 'btn-secondary', click: function() { closeModal(); }}
      ]);
    }
  });

  // Close modals
  $('.close-modal').click(function() {
    closeModal();
  });

  $(window).click(function(event) {
    if ($(event.target).hasClass('modal')) {
      closeModal();
    }
  });

  // Universal modal functions
  function showModal(title, body, actions) {
    $('#modal-title').html(title);
    $('#modal-body').html(body);
    $('#modal-actions').empty();
    actions.forEach(function(action) {
      $('<button>')
        .text(action.text)
        .addClass('btn ' + action.class)
        .click(action.click)
        .appendTo('#modal-actions');
    });
    $('#universal-modal').show();
  }

  function closeModal() {
    $('.modal').hide();
  }

  // Delete URL function
  function deleteUrl(shortCode) {
    $.ajax({
      url: '/url/' + shortCode,
      method: 'DELETE',
      success: function() {
        showModal('Success', 'URL deleted successfully!', [
          {text: 'OK', class: 'btn-primary', click: function() { location.reload(); }}
        ]);
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  }

  // Copy to clipboard
  $('#copy-button').click(function() {
    var shortCode = $(this).data('short-code');
    var dummy = document.createElement('input');
    document.body.appendChild(dummy);
    // get the base URL and append the short code by sending a request to the /find/:shortCode endpoint
    $.ajax({
      url: '/find/' + shortCode,
      method: 'GET',
      success: function(response) {
        dummy.value = response.fullUrl;
        dummy.select();
        document.execCommand('copy');
        document.body.removeChild(dummy);
        showModal('Success', 'Short URL copied to clipboard!', [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      },
      error: function(xhr) {
        showModal('Error', 'Error: ' + xhr.responseJSON.error, [
          {text: 'OK', class: 'btn-primary', click: function() { closeModal(); }}
        ]);
      }
    });
  });

});
</script>