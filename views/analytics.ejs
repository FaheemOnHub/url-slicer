<h1>Analytics Dashboard</h1>

<div class="analytics-container">
  <div class="panel">
    <h2>Overall Statistics</h2>
    <div class="stats-grid">
      <div class="stat-box">
        <h3>Total Clicks</h3>
        <p id="total-clicks">Loading...</p>
      </div>
      <div class="stat-box">
        <h3>Total URLs</h3>
        <p id="total-urls">Loading...</p>
      </div>
      <div class="stat-box">
        <h3>Average CTR</h3>
        <p id="average-ctr">Loading...</p>
      </div>
    </div>
  </div>

  <div class="panel">
    <h2>Clickthrough Rates Over Time</h2>
    <canvas id="ctrChart"></canvas>
  </div>

  <div class="panel">
    <h2>Geo Distribution of Clicks</h2>
    <div id="map" style="width: 100%; height: 400px;"></div>
  </div>

  <div class="panel" class="statsChart">
    <h2>Device Statistics</h2>
    <canvas id="deviceChart"></canvas>
  </div>

  <div class="panel" class="statsChart">
    <h2>Browser Statistics</h2>
    <canvas id="browserChart"></canvas>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-choropleth@1.1.4/dist/choropleth.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Fetch analytics data
  fetch('/api/analytics')
    .then(response => response.json())
    .then(data => {
      updateOverallStats(data);
      createCTRChart(data.ctrOverTime);
      createGeoMap(data.geoDistribution);
      createDeviceChart(data.deviceStats);
      createBrowserChart(data.browserStats);
    })
    .catch(error => console.error('Error fetching analytics data:', error));

  // Fetch GeoJSON data for country boundaries
  fetch('https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson')
    .then(response => response.json())
    .then(countriesData => {
      window.countriesGeoJSON = countriesData;
    })
    .catch(error => console.error('Error fetching GeoJSON data:', error));
});

function updateOverallStats(data) {
  document.getElementById('total-clicks').textContent = data.totalClicks;
  document.getElementById('total-urls').textContent = data.totalUrls;
  document.getElementById('average-ctr').textContent = (data.averageCTR * 100).toFixed(2) + '%';
}

function createCTRChart(ctrData) {
  const ctx = document.getElementById('ctrChart').getContext('2d');
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: ctrData.map(d => d._id),
      datasets: [{
        label: 'CTR',
        data: ctrData.map(d => d.ctr * 100),
        borderColor: 'rgb(75, 192, 192)',
        tension: 0.1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true,
          ticks: {
            callback: function(value) {
              return value + '%';
            }
          }
        }
      }
    }
  });
}

function createGeoMap(geoData) {
  if (!window.countriesGeoJSON) {
    console.error('GeoJSON data not loaded');
    return;
  }

  const map = L.map('map').setView([0, 0], 2);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: 'Â© OpenStreetMap contributors'
  }).addTo(map);

  // Convert geoData to the format expected by the choropleth plugin
  const clicksData = {};
  for (const country in geoData) {
    clicksData[country] = geoData[country];
  }

  // Create the choropleth layer
  L.choropleth(window.countriesGeoJSON, {
    valueProperty: function(feature) {
      return clicksData[feature.properties.ISO_A2] || 0;
    },
    scale: ['#FFEDA0', '#FEB24C', '#F03B20'],
    steps: 5,
    mode: 'q',
    style: {
      color: '#fff',
      weight: 2,
      fillOpacity: 0.8
    },
    onEachFeature: function(feature, layer) {
      layer.bindPopup(
        'Country: ' + feature.properties.ADMIN + '<br>' +
        'Clicks: ' + (clicksData[feature.properties.ISO_A2] || 0)
      );
    }
  }).addTo(map);

  // Add a legend
  const legend = L.control({position: 'bottomright'});
  legend.onAdd = function(map) {
    const div = L.DomUtil.create('div', 'info legend');
    const limits = [0, 10, 20, 50, 100, 200];
    const colors = ['#FFEDA0', '#FED976', '#FEB24C', '#FD8D3C', '#FC4E2A', '#E31A1C'];
    let labels = [];

    for (let i = 0; i < limits.length; i++) {
      const from = limits[i];
      const to = limits[i + 1];

      labels.push(
        '<i style="background:' + colors[i] + '"></i> ' +
        from + (to ? '&ndash;' + to : '+') + ' clicks');
    }

    div.innerHTML = labels.join('<br>');
    return div;
  };
  legend.addTo(map);
}

function createDeviceChart(deviceData) {
  const ctx = document.getElementById('deviceChart').getContext('2d');
  new Chart(ctx, {
    type: 'pie',
    data: {
      labels: deviceData.map(d => d._id),
      datasets: [{
        data: deviceData.map(d => d.count),
        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Device Usage'
        }
      }
    }
  });
}

function createBrowserChart(browserData) {
  const ctx = document.getElementById('browserChart').getContext('2d');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: browserData.map(d => d._id),
      datasets: [{
        label: 'Usage',
        data: browserData.map(d => d.count),
        backgroundColor: 'rgba(75, 192, 192, 0.6)',
        borderColor: 'rgba(75, 192, 192, 1)',
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}
</script>

<style>
.info {
    padding: 6px 8px;
    font: 14px/16px Arial, Helvetica, sans-serif;
    background: white;
    background: rgba(255,255,255,0.8);
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    border-radius: 5px;
}
.legend {
    line-height: 18px;
    color: #555;
}
.legend i {
    width: 18px;
    height: 18px;
    float: left;
    margin-right: 8px;
    opacity: 0.7;
}
</style>