<h1>Analytics Dashboard</h1>

<div class="analytics-container">
  <div class="panel">
    <h2>Overall Statistics</h2>
    <div class="stats-grid">
      <div class="stat-box">
        <h3>Total Clicks</h3>
        <p id="total-clicks">Loading...</p>
      </div>
      <div class="stat-box">
        <h3>Total URLs</h3>
        <p id="total-urls">Loading...</p>
      </div>
      <div class="stat-box">
        <h3>Average CTR</h3>
        <p id="average-ctr">Loading...</p>
      </div>
    </div>
  </div>

  <div class="panel">
    <h2>Clickthrough Rates Over Time</h2>
    <canvas id="ctrChart"></canvas>
  </div>

  <div class="panel">
    <h2>URL Statistics</h2>
    <div id="url-list"></div>
  </div>

  <div class="panel" class="statsChart">
    <h2>Device Statistics</h2>
    <canvas id="deviceChart"></canvas>
  </div>

  <div class="panel" class="statsChart">
    <h2>Browser Statistics</h2>
    <canvas id="browserChart"></canvas>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  fetch('/api/analytics')
    .then(response => response.json())
    .then(data => {
      updateOverallStats(data);
      createCTRChart(data.ctrOverTime);
      createDeviceChart(data.deviceStats);
      createBrowserChart(data.browserStats);
      fetchUrlList();
    })
    .catch(error => console.error('Error fetching analytics data:', error));
});

function updateOverallStats(data) {
  document.getElementById('total-clicks').textContent = data.totalClicks;
  document.getElementById('total-urls').textContent = data.totalUrls;
  document.getElementById('average-ctr').textContent = (data.averageCTR * 100).toFixed(2) + '%';
}

function createCTRChart(ctrData) {
  const ctx = document.getElementById('ctrChart').getContext('2d');
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: ctrData.map(d => d._id),
      datasets: [{
        label: 'CTR',
        data: ctrData.map(d => d.ctr * 100),
        borderColor: 'rgb(75, 192, 192)',
        tension: 0.1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true,
          ticks: {
            callback: function(value) {
              return value + '%';
            }
          }
        }
      }
    }
  });
}

function fetchUrlList() {
  fetch('/dashboard')
    .then(response => response.text())
    .then(html => {
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');
      const urlItems = doc.querySelectorAll('.url-item');
      const urlListContainer = document.getElementById('url-list');

      urlItems.forEach(item => {
        const shortCode = item.querySelector('.short-url a').textContent.trim();
        const originalUrl = item.querySelector('.original-url').textContent;

        const urlPanel = document.createElement('div');
        urlPanel.className = 'panel url-panel';
        urlPanel.innerHTML = `
          <h3>${originalUrl}</h3>
          <p>Short URL: ${shortCode}</p>
          <h4>Country Statistics</h4>
          <div class="country-list" id="country-list-${shortCode}">Loading...</div>
        `;

        urlListContainer.appendChild(urlPanel);

        fetchCountryStats(shortCode);
      });
    })
    .catch(error => console.error('Error fetching URL list:', error));
}

function fetchCountryStats(shortCode) {
  fetch(`/api/country-stats/${shortCode}`)
    .then(response => response.json())
    .then(data => {
      const countryList = document.getElementById(`country-list-${shortCode}`);
      let listHtml = '<ul class="country-stats">';
      data.forEach(({ _id, count }) => {
        listHtml += `
          <li class="country-stat-item">
            <span class="country-name">${_id}</span>
            <span class="country-clicks">${count} click${count !== 1 ? 's' : ''}</span>
          </li>
        `;
      });
      listHtml += '</ul>';
      countryList.innerHTML = listHtml;
    })
    .catch(error => console.error(`Error fetching country stats for ${shortCode}:`, error));
}

function createDeviceChart(deviceData) {
  const ctx = document.getElementById('deviceChart').getContext('2d');
  new Chart(ctx, {
    type: 'pie',
    data: {
      labels: deviceData.map(d => d._id),
      datasets: [{
        data: deviceData.map(d => d.count),
        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Device Usage'
        }
      }
    }
  });
}

function createBrowserChart(browserData) {
  const ctx = document.getElementById('browserChart').getContext('2d');
  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: browserData.map(d => d._id),
      datasets: [{
        label: 'Usage',
        data: browserData.map(d => d.count),
        backgroundColor: 'rgba(75, 192, 192, 0.6)',
        borderColor: 'rgba(75, 192, 192, 1)',
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}
</script>